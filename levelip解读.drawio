<mxfile host="app.diagrams.net" modified="2021-01-15T16:22:02.453Z" agent="5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36" etag="3fgG8LJp6p2f8MXUwakx" version="14.2.3" type="github">
  <diagram id="JkMtZPwAcen48O5Z7KO6" name="第 1 页">
    <mxGraphModel dx="4382" dy="1905" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-3" target="h-AYutWAJ_S-bmYvBNu8-6" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1080" y="258.25" />
              <mxPoint x="1080" y="258.25" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-2" value="inet_create" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="h-AYutWAJ_S-bmYvBNu8-1" vertex="1" connectable="0">
          <mxGeometry x="-0.1493" y="-1" relative="1" as="geometry">
            <mxPoint x="7.5" y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-3" value="生成socket&lt;br&gt;socket-&amp;gt;fd = 4097++&lt;br&gt;调用inet_create&lt;br&gt;将socket加入sockets链表&lt;br&gt;sock_amount++&lt;br&gt;返回&lt;font color=&quot;#ff0000&quot;&gt;socket-&amp;gt;fd&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;shadow=0;align=left;" parent="1" vertex="1">
          <mxGeometry x="990" y="207.94" width="150" height="96.31" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-6" target="h-AYutWAJ_S-bmYvBNu8-16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-5" value="tcp_alloc_sock" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="h-AYutWAJ_S-bmYvBNu8-4" vertex="1" connectable="0">
          <mxGeometry x="-0.1667" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-6" value="根据传入的参数type&lt;br&gt;选择一项，作为skt：&lt;br&gt;&lt;div&gt;struct sock_type inet_ops[] = {&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;{&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .sock_ops = &amp;amp;sock_ops,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .net_ops = &amp;amp;tcp_ops,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .type = SOCK_STREAM,&lt;span&gt;  &lt;/span&gt;//TCP&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .protocol = IPPROTO_TCP,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;},&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .sock_ops = &amp;amp;sock_ops,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .net_ops = &amp;amp;udp_ops,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .type = SOCK_DGRAM,&lt;span&gt;  &lt;/span&gt;//UDP&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .protocol = IPPROTO_UDP,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;socket-&amp;gt;ops = skt-&amp;gt;sock_ops;/&lt;font color=&quot;#ff0000&quot;&gt;/inet_stream_ops&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;生成sock（简写为sk）&lt;/div&gt;&lt;div&gt;&lt;div&gt;sk-&amp;gt;ops = skt-&amp;gt;net_ops&lt;/div&gt;&lt;div&gt;即 sk-&amp;gt;ops = tcp_ops 或是 udp_ops&lt;/div&gt;&lt;/div&gt;&lt;div&gt;生成sock调用的是&lt;font color=&quot;#ff0000&quot;&gt;&amp;nbsp;&lt;span&gt;tcp_ops-&amp;gt;alloc_sock&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;返回的也是 tcp_sock 类型强转成的 sock&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;sock_init_data：&lt;br&gt;&lt;/div&gt;&lt;div&gt;socket和sock互相关联&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;shadow=0;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1290" y="63" width="270" height="390" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-9" target="h-AYutWAJ_S-bmYvBNu8-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-8" value="IPC_SOCKET" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="h-AYutWAJ_S-bmYvBNu8-7" vertex="1" connectable="0">
          <mxGeometry x="0.2507" y="-4" relative="1" as="geometry">
            <mxPoint x="-15" y="-4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="h-AYutWAJ_S-bmYvBNu8-9" target="nQ9esfCF_CsTz2VPVnLO-1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="300" y="258" />
              <mxPoint x="300" y="1276" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-3" value="IPC_CONNECT" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" vertex="1" connectable="0" parent="nQ9esfCF_CsTz2VPVnLO-2">
          <mxGeometry x="-0.2011" y="-4" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-9" value="start_ipc_listener线程：&lt;br&gt;生成一个UNIX域的socket&lt;br&gt;accept之后，产生一个新的datasocket&lt;br&gt;创建ipc_thread结构&lt;br&gt;th-&amp;gt;sock = datasocket&lt;br&gt;将ipc_thread加入到sockets链表【不是connetions链表】名字无所谓，static的&lt;br&gt;socket_count++&lt;br&gt;&lt;br&gt;启动新线程&lt;br&gt;读取datasocket获得消息&lt;br&gt;调用demux_ipc_socket_call分发消息&lt;br&gt;消息类型有：&lt;br&gt;&lt;div&gt;IPC_SOCKET&lt;/div&gt;&lt;div&gt;IPC_CONNECT&lt;/div&gt;&lt;div&gt;IPC_WRITE&lt;/div&gt;&lt;div&gt;IPC_READ&lt;/div&gt;&lt;div&gt;IPC_CLOSE&lt;/div&gt;&lt;div&gt;IPC_POLL&lt;/div&gt;&lt;div&gt;IPC_FCNTL&lt;/div&gt;&lt;div&gt;getsockopt/getpeername/getsockname&lt;/div&gt;&lt;div&gt;下边的都没有：&lt;/div&gt;&lt;div&gt;bind/accept/listen/&lt;span&gt;SENDTO/&lt;/span&gt;&lt;span&gt;RECVFROM&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="40" y="94.63" width="230" height="326.75" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-14" target="h-AYutWAJ_S-bmYvBNu8-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-11" value="_socket" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="h-AYutWAJ_S-bmYvBNu8-10" vertex="1" connectable="0">
          <mxGeometry x="0.2545" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-12" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-14" target="h-AYutWAJ_S-bmYvBNu8-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-13" value="ipc_write_rc" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="h-AYutWAJ_S-bmYvBNu8-12" vertex="1" connectable="0">
          <mxGeometry x="-0.1511" y="-4" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-14" value="&lt;span&gt;struct ipc_socket *ipc_socket = (struct ipc_socket *)msg-&amp;gt;data;&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;pid_t pid = msg-&amp;gt;pid;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;//返回新建socket的fd&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;rc = _socket(pid, ipc_socket-&amp;gt;domain, ipc_socket-&amp;gt;type, ipc_socket-&amp;gt;protocol);&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;return ipc_write_rc(sockfd, pid, IPC_SOCKET, &lt;font color=&quot;#ff0000&quot;&gt;rc&lt;/font&gt;);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="420" y="211.75" width="430" height="92.5" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="h-AYutWAJ_S-bmYvBNu8-15" target="nQ9esfCF_CsTz2VPVnLO-5">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1440" y="543.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-15" value="int resplen = sizeof(struct ipc_msg) + sizeof(struct ipc_err);&lt;br&gt;&lt;div&gt;&lt;span&gt;err.rc =&lt;/span&gt;&lt;font color=&quot;#ff0000&quot;&gt; rc&lt;/font&gt;&lt;span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;memcpy(response-&amp;gt;data, &amp;amp;err, sizeof(struct ipc_err));&lt;/div&gt;write(sockfd, (char *)response, resplen)通过UNIX域的socket回复" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="910" y="714.09" width="350" height="81.5" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-16" value="&lt;div&gt;tsk-&amp;gt;sk.state = TCP_CLOSE;&lt;/div&gt;&lt;div&gt;tsk-&amp;gt;sackok = 1;&lt;/div&gt;&lt;div&gt;&lt;span&gt;tsk-&amp;gt;rmss = 1460;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;// send maximum segment size -拥塞控制相关&lt;/div&gt;&lt;div&gt;// Default to 536 as per spec&lt;/div&gt;&lt;div&gt;tsk-&amp;gt;smss = 536;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;skb_queue_init(&amp;amp;tsk-&amp;gt;ofo_queue);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1680" y="189.25" width="290" height="137.5" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-17" value="IPC层" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=20;" parent="1" vertex="1">
          <mxGeometry x="140" y="50" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-18" value="socket层" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=20;" parent="1" vertex="1">
          <mxGeometry x="1110" y="50" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-19" value="sock层&lt;br&gt;tcp_sock层" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=20;" parent="1" vertex="1">
          <mxGeometry x="1790" y="40" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-22" value="程序总体规划：&lt;br&gt;&lt;br&gt;curl应用程序调用的系统调用接口&lt;br&gt;都被liblevelip.so接管了&lt;br&gt;而这些系统调用的实现，最后读写的是Unix域的那个socket。负责处理的是 start_ipc_listener 线程&lt;br&gt;例如curl调用了liblevelip.so里的read系统调用，&lt;br&gt;它做的事：读写了Unix域的socket&lt;br&gt;最终需要了解的是 start_ipc_listener 线程中IPC_WRITE/IPC_READ的实现。&lt;br&gt;&lt;br&gt;&lt;br&gt;网卡收到的数据，给到tap0设备，是另外一个线程 netdev_rx_loop 去处理，它 read/write tap 设备" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="-720" y="110" width="550" height="445.75" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-1" value="&lt;span&gt;struct ipc_socket *ipc_socket = (struct ipc_socket *)msg-&amp;gt;data;&lt;/span&gt;&lt;br&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;pid_t pid = msg-&amp;gt;pid;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;//返回新建socket的fd&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;rc = _socket(pid, ipc_socket-&amp;gt;domain, ipc_socket-&amp;gt;type, ipc_socket-&amp;gt;protocol);&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;return ipc_write_rc(sockfd, pid, IPC_SOCKET, rc);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" vertex="1" parent="1">
          <mxGeometry x="414" y="1230" width="430" height="92.5" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" source="nQ9esfCF_CsTz2VPVnLO-5" target="nQ9esfCF_CsTz2VPVnLO-6">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-9" value="&lt;span style=&quot;color: rgb(0 , 0 , 0) ; font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;transmit_lvlip&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=20;fontColor=#FF00FF;" vertex="1" connectable="0" parent="nQ9esfCF_CsTz2VPVnLO-7">
          <mxGeometry x="0.2879" y="2" relative="1" as="geometry">
            <mxPoint x="-20.83" y="-2.84" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-5" value="socket函数：&lt;br&gt;&amp;nbsp; &amp;nbsp; 关联到UNIX域的文件：&lt;br&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int lvlfd = init_socket(&quot;/tmp/lvlip.socket&quot;);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct lvlip_sock *sock = lvlip_alloc();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; sock-&amp;gt;lvlfd = lvlfd;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; list_add_tail(&amp;amp;sock-&amp;gt;list, &amp;amp;lvlip_socks);//加入到lvlip_socks链表&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; lvlip_socks_count++;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int pid = getpid();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int msglen = sizeof(struct ipc_msg) + sizeof(struct ipc_socket);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct ipc_msg *msg = alloca(msglen);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; msg-&amp;gt;type = IPC_SOCKET;//这个类型出现了！&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; msg-&amp;gt;pid = pid;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct ipc_socket usersock = {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .domain = domain,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .type = type,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .protocol = protocol&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; };&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(msg-&amp;gt;data, &amp;amp;usersock, sizeof(struct ipc_socket));&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; //返回的是 lvl-ip 进程给分配的sockfd&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int sockfd = transmit_lvlip(sock-&amp;gt;lvlfd, msg, msglen);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return sock-&amp;gt;fd = sockfd;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;strokeColor=#FF00FF;" vertex="1" parent="1">
          <mxGeometry x="1630" y="547.34" width="350" height="415" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-6" value="&lt;div&gt;_write(lvlfd, (char *)msg, msglen)&lt;/div&gt;&lt;div&gt;&lt;span&gt;_read(lvlfd, buf, RCBUF_LEN)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;// 发送的格式、回应的格式，都是自己定义的，哈哈哈！&lt;/div&gt;&lt;div&gt;&lt;span&gt;	&lt;/span&gt;// ipc_msg + ipc_err&lt;/div&gt;&lt;div&gt;struct ipc_msg *response = (struct ipc_msg *) buf;&lt;/div&gt;&lt;div&gt;&lt;span&gt;struct ipc_err *err = (struct ipc_err *) response-&amp;gt;data;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;font color=&quot;#ff00ff&quot;&gt;返回的是一个文件描述符！&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;return err-&amp;gt;rc;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;strokeColor=#FF00FF;" vertex="1" parent="1">
          <mxGeometry x="2090" y="667.34" width="350" height="175" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-8" value="&lt;span style=&quot;text-align: left; font-size: 20px;&quot;&gt;liblevelip.so&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=20;fontColor=#FF00FF;" vertex="1" parent="1">
          <mxGeometry x="2007" y="550" width="120" height="30" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
