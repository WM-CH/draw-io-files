<mxfile host="app.diagrams.net" modified="2021-01-24T07:21:12.829Z" agent="5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36" etag="yFLLC9LsXW5O046sgUwO" version="14.2.7" type="github">
  <diagram id="JkMtZPwAcen48O5Z7KO6" name="第 1 页">
    <mxGraphModel dx="1808" dy="1695" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-3" target="h-AYutWAJ_S-bmYvBNu8-6" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1140" y="1478.25" />
              <mxPoint x="1140" y="1478.25" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-2" value="inet_create" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="h-AYutWAJ_S-bmYvBNu8-1" vertex="1" connectable="0">
          <mxGeometry x="-0.1493" y="-1" relative="1" as="geometry">
            <mxPoint x="106.66999999999999" y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-3" value="生成socket【alloc_socket】&lt;br&gt;socket-state=&lt;span style=&quot;background-color: rgb(255 , 255 , 153)&quot;&gt;SS_UNCONNECTED&lt;/span&gt;&lt;br&gt;socket-&amp;gt;pid=msg-&amp;gt;pid&lt;br&gt;是调用者进程的PID&lt;br&gt;socket-&amp;gt;fd = 4097++&lt;br&gt;&lt;br&gt;调用inet_create&lt;br&gt;将socket加入&lt;font color=&quot;#ff8000&quot;&gt;sockets链表&lt;/font&gt;&lt;br&gt;sock_amount++&lt;br&gt;返回&lt;font color=&quot;#ff0000&quot;&gt;socket-&amp;gt;fd&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;shadow=0;align=left;" parent="1" vertex="1">
          <mxGeometry x="1030" y="1404.62" width="210" height="146.75" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-6" target="h-AYutWAJ_S-bmYvBNu8-16" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-5" value="tcp_alloc_sock" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="h-AYutWAJ_S-bmYvBNu8-4" vertex="1" connectable="0">
          <mxGeometry x="-0.1667" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-6" value="根据传入的参数type&lt;br&gt;选择一项，作为skt：&lt;br&gt;&lt;div&gt;struct sock_type inet_ops[] = {&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;{&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .sock_ops = &amp;amp;sock_ops,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .net_ops = &amp;amp;tcp_ops,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .type = SOCK_STREAM,&lt;span&gt;  &lt;/span&gt;//TCP&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .protocol = IPPROTO_TCP,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;},&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;{&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .sock_ops = &amp;amp;sock_ops,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .net_ops = &amp;amp;udp_ops,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .type = SOCK_DGRAM,&lt;span&gt;  &lt;/span&gt;//UDP&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;&amp;nbsp; .protocol = IPPROTO_UDP,&lt;/div&gt;&lt;div&gt;&lt;span&gt;   &lt;/span&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;socket-&amp;gt;ops = skt-&amp;gt;sock_ops;/&lt;font color=&quot;#ff0000&quot;&gt;/inet_stream_ops&lt;/font&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;生成sock（简写为sk）&lt;/div&gt;&lt;div&gt;&lt;div&gt;sk-&amp;gt;ops = skt-&amp;gt;net_ops&lt;/div&gt;&lt;div&gt;即 sk-&amp;gt;ops = tcp_ops 或是 udp_ops&lt;/div&gt;&lt;/div&gt;&lt;div&gt;生成sock调用的是&lt;font color=&quot;#ff0000&quot;&gt;&amp;nbsp;&lt;span&gt;tcp_ops-&amp;gt;alloc_sock&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;返回的也是 tcp_sock 类型强转成的 sock&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;sock_init_data：&lt;br&gt;&lt;/div&gt;&lt;div&gt;socket和sock互相关联&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;shadow=0;align=left;verticalAlign=top;" parent="1" vertex="1">
          <mxGeometry x="1350" y="1283" width="270" height="390" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-9" target="h-AYutWAJ_S-bmYvBNu8-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-8" value="IPC_SOCKET" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="h-AYutWAJ_S-bmYvBNu8-7" vertex="1" connectable="0">
          <mxGeometry x="0.2507" y="-4" relative="1" as="geometry">
            <mxPoint x="-15" y="-4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-9" target="nQ9esfCF_CsTz2VPVnLO-1" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="360" y="1478" />
              <mxPoint x="360" y="2496" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-3" value="IPC_CONNECT" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="nQ9esfCF_CsTz2VPVnLO-2" vertex="1" connectable="0">
          <mxGeometry x="-0.2011" y="-4" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-9" value="start_ipc_listener线程：&lt;br&gt;生成一个UNIX域的socket&lt;br&gt;accept之后，产生一个新的datasocket&lt;br&gt;创建ipc_thread结构&lt;br&gt;th-&amp;gt;sock = datasocket&lt;br&gt;将ipc_thread加入到sockets链表【不是connetions链表】名字无所谓，static的&lt;br&gt;socket_count++&lt;br&gt;&lt;br&gt;启动新线程&lt;br&gt;读取datasocket获得消息&lt;br&gt;调用demux_ipc_socket_call分发消息&lt;br&gt;消息类型有：&lt;br&gt;&lt;div&gt;IPC_SOCKET&lt;/div&gt;&lt;div&gt;IPC_CONNECT&lt;/div&gt;&lt;div&gt;IPC_WRITE&lt;/div&gt;&lt;div&gt;IPC_READ&lt;/div&gt;&lt;div&gt;IPC_CLOSE&lt;/div&gt;&lt;div&gt;IPC_POLL&lt;/div&gt;&lt;div&gt;IPC_FCNTL&lt;/div&gt;&lt;div&gt;getsockopt/getpeername/getsockname&lt;/div&gt;&lt;div&gt;下边的都没有：&lt;/div&gt;&lt;div&gt;bind/accept/listen/&lt;span&gt;SENDTO/&lt;/span&gt;&lt;span&gt;RECVFROM&lt;/span&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="100" y="1314.63" width="230" height="326.75" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-10" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-14" target="h-AYutWAJ_S-bmYvBNu8-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-11" value="_socket" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="h-AYutWAJ_S-bmYvBNu8-10" vertex="1" connectable="0">
          <mxGeometry x="0.2545" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-12" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-14" target="h-AYutWAJ_S-bmYvBNu8-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-13" value="ipc_write_rc" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="h-AYutWAJ_S-bmYvBNu8-12" vertex="1" connectable="0">
          <mxGeometry x="-0.1511" y="-4" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-14" value="struct &lt;font color=&quot;#ff8000&quot;&gt;ipc_socket &lt;/font&gt;*ipc_socket = (struct ipc_socket *)msg-&amp;gt;data;&lt;br&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;pid_t pid = msg-&amp;gt;pid;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;//返回新建socket的fd&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;rc = _socket(pid, ipc_socket-&amp;gt;domain, ipc_socket-&amp;gt;type, ipc_socket-&amp;gt;protocol);&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;return ipc_write_rc(sockfd, pid, IPC_SOCKET, &lt;font color=&quot;#ff0000&quot;&gt;rc&lt;/font&gt;);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="480" y="1431.75" width="430" height="92.5" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;dashed=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="h-AYutWAJ_S-bmYvBNu8-15" target="nQ9esfCF_CsTz2VPVnLO-5" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="1500" y="1763.5" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-15" value="int resplen = sizeof(struct ipc_msg) + sizeof(struct ipc_err);&lt;br&gt;&lt;div&gt;&lt;span&gt;err.rc =&lt;/span&gt;&lt;font color=&quot;#ff0000&quot;&gt; rc&lt;/font&gt;&lt;span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;memcpy(response-&amp;gt;data, &amp;amp;err, sizeof(struct ipc_err));&lt;/div&gt;write(sockfd, (char *)response, resplen)通过UNIX域的socket回复" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="970" y="1934.0900000000001" width="350" height="81.5" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-16" value="&lt;div&gt;tsk-&amp;gt;sk.state = &lt;span style=&quot;background-color: rgb(255 , 255 , 153)&quot;&gt;TCP_CLOSE&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;tsk-&amp;gt;sackok = 1;&lt;/div&gt;&lt;div&gt;&lt;span&gt;tsk-&amp;gt;rmss = 1460;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;// send maximum segment size -拥塞控制相关&lt;/div&gt;&lt;div&gt;// Default to 536 as per spec&lt;/div&gt;&lt;div&gt;tsk-&amp;gt;smss = 536;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;skb_queue_init(&amp;amp;tsk-&amp;gt;ofo_queue);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1740" y="1409.25" width="290" height="137.5" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-17" value="IPC层" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=20;" parent="1" vertex="1">
          <mxGeometry x="200" y="1270" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-18" value="socket层" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=20;" parent="1" vertex="1">
          <mxGeometry x="1170" y="1270" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-19" value="sock层&lt;br&gt;tcp_sock层" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=20;" parent="1" vertex="1">
          <mxGeometry x="1850" y="1260" width="110" height="50" as="geometry" />
        </mxCell>
        <mxCell id="h-AYutWAJ_S-bmYvBNu8-22" value="一、协议栈中三个网卡的IP地址：&lt;br&gt;tap设备&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#ff0000&quot;&gt;10.0.0.5&lt;/font&gt;&lt;br&gt;netdev&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#ff0000&quot;&gt;10.0.0.4&lt;/font&gt;&lt;br&gt;loop&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 127.0.0.1&lt;br&gt;&lt;br&gt;&lt;br&gt;二、程序总体规划：&lt;br&gt;&lt;br&gt;curl应用程序调用的系统调用接口&lt;br&gt;都被liblevelip.so接管了&lt;br&gt;而这些系统调用的实现，最后读写的是Unix域的那个socket。负责处理的是 start_ipc_listener 线程&lt;br&gt;例如curl调用了liblevelip.so里的read系统调用，&lt;br&gt;它做的事：读写了Unix域的socket&lt;br&gt;最终需要了解的是 start_ipc_listener 线程中IPC_WRITE/IPC_READ的实现。&lt;br&gt;&lt;br&gt;&lt;br&gt;网卡收到的数据，给到tap0设备，是另外一个线程 netdev_rx_loop 去处理，它 read/write tap 设备&lt;br&gt;&lt;br&gt;三、测试ARP模块时，&lt;br&gt;使用命&lt;font&gt;令&amp;nbsp;&lt;span style=&quot;font-size: 12px ; background-color: rgb(238 , 238 , 238) ; color: rgb(17 , 17 , 17)&quot;&gt;arping &lt;/span&gt;&lt;span class=&quot;nt&quot; style=&quot;font-size: 12px ; background-color: rgb(238 , 238 , 238) ; color: navy&quot;&gt;-i&lt;/span&gt;&lt;span style=&quot;color: rgb(17 , 17 , 17) ; font-size: 12px ; background-color: rgb(238 , 238 , 238)&quot;&gt;&amp;nbsp;tap0 10.0.0.4&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;color: rgb(17 , 17 , 17) ; font-size: 12px ; background-color: rgb(255 , 255 , 255)&quot;&gt;将arp数据发给tap网卡，netdev_rx_loop线程read tap设备后，获得arp请求的数据。&lt;br&gt;在本协议栈中处理后，再通过write tap设备，将回应数据发出。&lt;br&gt;&lt;/span&gt;&lt;br&gt;&lt;font color=&quot;#111111&quot;&gt;四、测试ICMP模块时，&lt;/font&gt;&lt;br&gt;&lt;font color=&quot;#111111&quot;&gt;使用命令 ping 10.0.0.4&lt;br&gt;&lt;/font&gt;linux系统会将数据从同属10.0.0.x网段的tap网卡将数据发出。&lt;br&gt;之后处理同ARP过程。&lt;br&gt;&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="-680" y="-1040" width="550" height="445.75" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-2" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="nQ9esfCF_CsTz2VPVnLO-1" target="yaBAwWdUjn6GlstP9hA2-1" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-3" value="_connect" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-2" vertex="1" connectable="0">
          <mxGeometry x="0.2767" y="3" relative="1" as="geometry">
            <mxPoint x="-17.25" y="2.94" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dzpFjZSb-bzoJs8NH7mf-6" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=0.5;exitY=1;exitDx=0;exitDy=0;dashed=1;" parent="1" source="nQ9esfCF_CsTz2VPVnLO-1" target="dzpFjZSb-bzoJs8NH7mf-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-1" value="&lt;div&gt;struct &lt;font color=&quot;#ff8000&quot;&gt;ipc_connect&lt;/font&gt; *payload = (struct ipc_connect *)msg-&amp;gt;data;&lt;/div&gt;&lt;div&gt;pid_t pid = msg-&amp;gt;pid;调用者进程的PID&lt;/div&gt;&lt;div&gt;payload-&amp;gt;sockfd是调用者调用_socket之后，生成的fd是4097++那个&lt;/div&gt;&lt;div&gt;rc = _connect(pid, &lt;font color=&quot;#ff0000&quot;&gt;payload-&amp;gt;sockfd&lt;/font&gt;, &amp;amp;payload-&amp;gt;addr, payload-&amp;gt;addrlen);&lt;/div&gt;&lt;div&gt;return ipc_write_rc(sockfd, pid, IPC_CONNECT, rc);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="474" y="2450" width="430" height="92.5" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="nQ9esfCF_CsTz2VPVnLO-5" target="nQ9esfCF_CsTz2VPVnLO-6" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-9" value="&lt;span style=&quot;color: rgb(0 , 0 , 0) ; font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;transmit_lvlip&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=20;fontColor=#FF00FF;" parent="nQ9esfCF_CsTz2VPVnLO-7" vertex="1" connectable="0">
          <mxGeometry x="0.2879" y="2" relative="1" as="geometry">
            <mxPoint x="-20.83" y="-2.84" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-5" value="socket函数：&lt;br&gt;&amp;nbsp; &amp;nbsp; 关联到UNIX域的文件：&lt;br&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int lvlfd = init_socket(&quot;/tmp/lvlip.socket&quot;);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct lvlip_sock *sock = lvlip_alloc();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; sock-&amp;gt;lvlfd = lvlfd;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; list_add_tail(&amp;amp;sock-&amp;gt;list, &amp;amp;lvlip_socks);//加入到lvlip_socks链表&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; lvlip_socks_count++;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int pid = getpid();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int msglen = sizeof(struct ipc_msg) + sizeof(struct ipc_socket);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct ipc_msg *msg = alloca(msglen);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; msg-&amp;gt;type = &lt;font color=&quot;#009900&quot;&gt;IPC_SOCKET;//这个类型出现了！&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; msg-&amp;gt;pid = pid;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct ipc_socket usersock = {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .domain = domain,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .type = type,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .protocol = protocol&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; };&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(msg-&amp;gt;data, &amp;amp;usersock, sizeof(struct ipc_socket));&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; //返回的是 lvl-ip 进程给分配的sockfd&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int sockfd = transmit_lvlip(sock-&amp;gt;lvlfd, msg, msglen);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return sock-&amp;gt;fd = sockfd;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;strokeColor=#FF00FF;" parent="1" vertex="1">
          <mxGeometry x="1690" y="1767.3400000000001" width="350" height="415" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-6" value="&lt;div&gt;_write(lvlfd, (char *)msg, msglen)&lt;/div&gt;&lt;div&gt;&lt;span&gt;_read(lvlfd, buf, RCBUF_LEN)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;// 发送的格式、回应的格式，都是自己定义的，哈哈哈！&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;// ipc_msg + ipc_err&lt;/div&gt;&lt;div&gt;struct ipc_msg *response = (struct ipc_msg *) buf;&lt;/div&gt;&lt;div&gt;&lt;span&gt;struct ipc_err *err = (struct ipc_err *) response-&amp;gt;data;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;font color=&quot;#ff00ff&quot;&gt;返回的是一个文件描述符！&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;return err-&amp;gt;rc;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;strokeColor=#FF00FF;" parent="1" vertex="1">
          <mxGeometry x="2150" y="1887.3400000000001" width="350" height="175" as="geometry" />
        </mxCell>
        <mxCell id="nQ9esfCF_CsTz2VPVnLO-8" value="&lt;span style=&quot;text-align: left; font-size: 20px;&quot;&gt;liblevelip.so&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=20;fontColor=#FF00FF;" parent="1" vertex="1">
          <mxGeometry x="2067" y="1770" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-10" target="yaBAwWdUjn6GlstP9hA2-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-6" value="tcp_v4_connect" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-5" vertex="1" connectable="0">
          <mxGeometry x="-0.106" y="-2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-11" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-1" target="yaBAwWdUjn6GlstP9hA2-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-12" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;inet_stream_connect&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-11" vertex="1" connectable="0">
          <mxGeometry x="-0.2237" relative="1" as="geometry">
            <mxPoint x="11.67" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-1" value="get_socket():根据pid和fd查找到socket&lt;br&gt;&lt;br&gt;sock-&amp;gt;ops-&amp;gt;connect == &lt;br&gt;inet_stream_ops-&amp;gt;connect == &lt;br&gt;inet_stream_connect&lt;br&gt;&lt;br&gt;return inet_stream_connect();" style="rounded=0;whiteSpace=wrap;html=1;shadow=0;align=left;" parent="1" vertex="1">
          <mxGeometry x="1030" y="2431.24" width="210" height="130" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-8" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-4" target="yaBAwWdUjn6GlstP9hA2-7" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-9" value="tcp_connect" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-8" vertex="1" connectable="0">
          <mxGeometry x="-0.2337" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-4" value="&lt;div&gt;uint16_t dport = ((struct sockaddr_in *)addr)-&amp;gt;sin_port;&lt;/div&gt;&lt;div&gt;uint32_t daddr = ((struct sockaddr_in *)addr)-&amp;gt;sin_addr.s_addr;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;sk-&amp;gt;dport = ntohs(dport);&lt;/div&gt;&lt;div&gt;sk-&amp;gt;sport = generate_port();随机一个口&lt;/div&gt;&lt;div&gt;sk-&amp;gt;daddr = ntohl(daddr);&lt;/div&gt;&lt;div&gt;sk-&amp;gt;saddr = parse_ipv4_string(&quot;10.0.0.4&quot;); tap设备的IP地址&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;return tcp_connect(sk);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="2740" y="2420.54" width="360" height="151.41" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-15" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-7" target="yaBAwWdUjn6GlstP9hA2-14" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-16" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;tcp_send_syn&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-15" vertex="1" connectable="0">
          <mxGeometry x="-0.3082" y="-2" relative="1" as="geometry">
            <mxPoint x="14.999999999999998" y="-1.99" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-7" value="&lt;div&gt;//把 struct sock 转换回去为 struct tcp_sock&lt;/div&gt;&lt;div&gt;struct tcp_sock *tsk = tcp_sk(sk);&lt;/div&gt;&lt;div&gt;struct tcb *tcb = &amp;amp;tsk-&amp;gt;tcb;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;tsk-&amp;gt;tcp_header_len = sizeof(struct tcphdr);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;tcb-&amp;gt;iss = generate_iss();&lt;/div&gt;&lt;div&gt;tcb-&amp;gt;snd_wnd = 0;&lt;/div&gt;&lt;div&gt;tcb-&amp;gt;snd_wl1 = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;tcb-&amp;gt;snd_una = tcb-&amp;gt;iss;&lt;/div&gt;&lt;div&gt;tcb-&amp;gt;snd_up = tcb-&amp;gt;iss;&lt;/div&gt;&lt;div&gt;tcb-&amp;gt;snd_nxt = tcb-&amp;gt;iss;&lt;/div&gt;&lt;div&gt;tcb-&amp;gt;rcv_nxt = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//接收窗口的大小&lt;/div&gt;&lt;div&gt;tcp_select_initial_window(&amp;amp;tsk-&amp;gt;tcb.rcv_wnd);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;// tcp_send_syn可能由于暂时找不到以太网地址的原因发送失败&lt;/div&gt;&lt;div&gt;// 但是存在定时器,隔一段时间再次尝试发送.&lt;/div&gt;&lt;div&gt;rc = tcp_send_syn(sk);&lt;/div&gt;&lt;div&gt;tcb-&amp;gt;snd_nxt++;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;return rc;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="3223" y="2310.1099999999997" width="349" height="372.29" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-10" value="通过socket找到sock&lt;br&gt;&lt;br&gt;socket-&amp;gt;state ==&amp;nbsp;&lt;span style=&quot;background-color: rgb(255 , 255 , 153)&quot;&gt;SS_UNCONNECTED&lt;/span&gt;&lt;br&gt;sock-&amp;gt;state ==&amp;nbsp;&lt;span style=&quot;background-color: rgb(255 , 255 , 153)&quot;&gt;TCP_CLOSE&lt;/span&gt;&lt;br&gt;&lt;br&gt;sk-&amp;gt;ops-&amp;gt;connect == &lt;br&gt;tcp_ops-&amp;gt;connect == &lt;font color=&quot;#ff0000&quot;&gt;tcp_v4_connect&lt;/font&gt;&lt;br&gt;&lt;br&gt;上边函数返回后，调整状态：&lt;br&gt;sock-&amp;gt;state = &lt;span style=&quot;background-color: rgb(255 , 255 , 102)&quot;&gt;SS_CONNECTING;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;br&gt;&lt;font color=&quot;#0000ff&quot;&gt;条件变量阻塞，被其他线程唤醒后继续执行&lt;br&gt;如果&lt;br&gt;sock-&amp;gt;state == SS_CONNECTING &amp;amp;&amp;amp; &lt;br&gt;sk-&amp;gt;err == -EINPROGRESS&lt;br&gt;则继续阻塞在这里。&lt;/font&gt;&lt;br&gt;&lt;br&gt;sk-&amp;gt;err为0时，调整状态：&lt;br&gt;&lt;/span&gt;sock-&amp;gt;state = &lt;span style=&quot;background-color: rgb(255 , 255 , 102)&quot;&gt;SS_CONNECTED;&lt;/span&gt;&lt;br&gt;&lt;br&gt;&lt;span style=&quot;background-color: rgb(255 , 255 , 255)&quot;&gt;返回sk-&amp;gt;err&lt;/span&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="1390" y="2336.33" width="250" height="320.38" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-18" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-14" target="yaBAwWdUjn6GlstP9hA2-17" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4052" y="2496" />
              <mxPoint x="4052" y="2105" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-19" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;tcp_syn_options&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-18" vertex="1" connectable="0">
          <mxGeometry x="0.1131" y="3" relative="1" as="geometry">
            <mxPoint x="73" y="-109.2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-21" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-14" target="yaBAwWdUjn6GlstP9hA2-20" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4052" y="2496" />
              <mxPoint x="4052" y="2371" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-22" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;tcp_alloc_skb&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-21" vertex="1" connectable="0">
          <mxGeometry x="0.5684" y="-3" relative="1" as="geometry">
            <mxPoint x="-5.899999999999999" y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-30" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-14" target="yaBAwWdUjn6GlstP9hA2-29" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-31" value="tcp_hdr" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-30" vertex="1" connectable="0">
          <mxGeometry x="0.2517" y="-3" relative="1" as="geometry">
            <mxPoint x="-6.5" y="-3.07" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-33" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="yaBAwWdUjn6GlstP9hA2-14" target="yaBAwWdUjn6GlstP9hA2-32" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4052" y="2496" />
              <mxPoint x="4052" y="2692" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-34" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;tcp_write_options&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-33" vertex="1" connectable="0">
          <mxGeometry x="0.7886" y="-4" relative="1" as="geometry">
            <mxPoint x="-31.67" y="-4" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-36" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-14" target="yaBAwWdUjn6GlstP9hA2-35" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="4052" y="2496" />
              <mxPoint x="4052" y="3040" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-37" value="tcp_queue_transmit_skb" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-36" vertex="1" connectable="0">
          <mxGeometry x="0.7182" y="-2" relative="1" as="geometry">
            <mxPoint x="10.67" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-14" value="&lt;div&gt;struct sk_buff *skb;&lt;/div&gt;&lt;div&gt;struct tcphdr *th;&lt;/div&gt;&lt;div&gt;struct tcp_options opts = { 0 };&lt;/div&gt;&lt;div&gt;int tcp_options_len = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;tcp_options_len = tcp_syn_options(sk, &amp;amp;opts);&lt;span&gt; &lt;/span&gt;//tcp选项的长度&lt;/div&gt;&lt;div&gt;skb = tcp_alloc_skb(tcp_options_len, 0);&lt;span&gt;  &lt;/span&gt;//需要发送tcp选项&lt;/div&gt;&lt;div&gt;th = tcp_hdr(skb);&lt;span&gt;        &lt;/span&gt;//指向tcp头部&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;tcp_write_options(th, &amp;amp;opts, tcp_options_len);&lt;/div&gt;&lt;div&gt;sk-&amp;gt;state = &lt;span style=&quot;background-color: rgb(255 , 255 , 102)&quot;&gt;TCP_SYN_SENT&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;th-&amp;gt;syn = 1;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;return tcp_queue_transmit_skb(sk, skb);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="3682" y="2368.44" width="340" height="255.62" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-17" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; struct tcp_sock *tsk = tcp_sk(sk);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; opts-&amp;gt;mss = tsk-&amp;gt;rmss;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; optlen += TCP_OPTLEN_MSS;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (tsk-&amp;gt;sackok) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; opts-&amp;gt;sack = 1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; optlen += TCP_OPT_NOOP * 2;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; optlen += TCP_OPTLEN_SACK;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; opts-&amp;gt;sack = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return optlen;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="4192" y="2000" width="300" height="210" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-24" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-20" target="yaBAwWdUjn6GlstP9hA2-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-25" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;alloc_skb&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-24" vertex="1" connectable="0">
          <mxGeometry x="-0.3" relative="1" as="geometry">
            <mxPoint x="8" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-27" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="yaBAwWdUjn6GlstP9hA2-20" target="yaBAwWdUjn6GlstP9hA2-26" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-28" value="skb_reserve" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-27" vertex="1" connectable="0">
          <mxGeometry x="-0.1435" y="-1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-20" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; int reserved = ETH_HDR_LEN + IP_HDR_LEN + TCP_HDR_LEN + optlen + size;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct sk_buff *skb = alloc_skb(reserved);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb_reserve(skb, reserved);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb-&amp;gt;protocol = IP_TCP;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb-&amp;gt;dlen = size;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb-&amp;gt;seq = 0;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="4192" y="2310.1099999999997" width="470" height="122" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-23" value="&lt;div&gt;struct sk_buff *skb = malloc(sizeof(struct sk_buff));&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;memset(skb, 0, sizeof(struct sk_buff));&lt;/div&gt;&lt;div&gt;skb-&amp;gt;data = malloc(size);&lt;/div&gt;&lt;div&gt;memset(skb-&amp;gt;data, 0, size);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;skb-&amp;gt;refcnt = 0;&lt;/div&gt;&lt;div&gt;skb-&amp;gt;head = skb-&amp;gt;data;&lt;/div&gt;&lt;div&gt;skb-&amp;gt;end = skb-&amp;gt;data + size;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;list_init(&amp;amp;skb-&amp;gt;list);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;return skb;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="4772" y="2120" width="290" height="208.89" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-26" value="&lt;div&gt;//一下保留很多段&lt;/div&gt;&lt;div&gt;void *skb_reserve(struct sk_buff *skb, unsigned int len)&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb-&amp;gt;data += len;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return skb-&amp;gt;data;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;//要修改哪一段的内容时，把哪一段push出来。&lt;/div&gt;&lt;div&gt;uint8_t *skb_push(struct sk_buff *skb, unsigned int len)&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb-&amp;gt;data -= len;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb-&amp;gt;len += len;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return skb-&amp;gt;data;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="4772" y="2368.44" width="308" height="238" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-29" value="head向后，跳过ETH头，跳过IP头&lt;br&gt;(struct tcphdr *)(skb-&amp;gt;head + ETH_HDR_LEN + IP_HDR_LEN);" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="4192" y="2461.88" width="350" height="68.75" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-32" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; struct tcp_opt_mss *opt_mss = (struct tcp_opt_mss *) th-&amp;gt;data;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; uint32_t i = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; opt_mss-&amp;gt;kind = TCP_OPT_MSS;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; opt_mss-&amp;gt;len = TCP_OPTLEN_MSS;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; opt_mss-&amp;gt;mss = htons(opts-&amp;gt;mss);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; i += sizeof(struct tcp_opt_mss);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (opts-&amp;gt;sack) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th-&amp;gt;data[i++] = TCP_OPT_NOOP;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th-&amp;gt;data[i++] = TCP_OPT_NOOP;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th-&amp;gt;data[i++] = TCP_OPT_SACK_OK;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; th-&amp;gt;data[i++] = TCP_OPTLEN_SACK;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; th-&amp;gt;hl = TCP_DOFFSET + (optlen / 4);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="4192" y="2564" width="360" height="256" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-39" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="yaBAwWdUjn6GlstP9hA2-35" target="yaBAwWdUjn6GlstP9hA2-38" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-40" value="tcp_rearm_rto_timer" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-39" vertex="1" connectable="0">
          <mxGeometry x="0.244" y="2" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-51" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-35" target="yaBAwWdUjn6GlstP9hA2-50" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-54" value="tcp_transmit_skb" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-51" vertex="1" connectable="0">
          <mxGeometry x="-0.0557" y="6" relative="1" as="geometry">
            <mxPoint y="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-35" value="&lt;div&gt;&lt;div&gt;//tcp_queue_transmit_skb 将要发送的内容加入write_queue,&lt;/div&gt;&lt;div&gt;//没有接收到ack的话,会一直重传该数据包&lt;/div&gt;&lt;div&gt;//而tcp_transmit_skb函数不会如此.&amp;nbsp;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct tcp_sock *tsk = tcp_sk(sk);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct tcb *tcb = &amp;amp;tsk-&amp;gt;tcb;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct tcphdr * th = tcp_hdr(skb);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (skb_queue_empty(&amp;amp;sk-&amp;gt;write_queue)) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;font color=&quot;#ff3333&quot;&gt;tcp_rearm_rto_timer&lt;/font&gt;(tsk);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (tsk-&amp;gt;inflight == 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* Store sequence information into the socket buffer */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; rc = &lt;font color=&quot;#ff6666&quot;&gt;tcp_transmit_skb&lt;/font&gt;(sk, skb, tcb-&amp;gt;snd_nxt);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tsk-&amp;gt;inflight++;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; skb-&amp;gt;seq = tcb-&amp;gt;snd_nxt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tcb-&amp;gt;snd_nxt += skb-&amp;gt;dlen;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; skb-&amp;gt;end_seq = tcb-&amp;gt;snd_nxt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (th-&amp;gt;fin) tcb-&amp;gt;snd_nxt++;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb_queue_tail(&amp;amp;sk-&amp;gt;write_queue, skb);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return rc;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="4192" y="2850" width="340" height="380" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-42" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-38" target="yaBAwWdUjn6GlstP9hA2-41" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-43" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;tcp_release_rto_timer&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-42" vertex="1" connectable="0">
          <mxGeometry x="-0.2231" y="1" relative="1" as="geometry">
            <mxPoint x="7.5" y="1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-45" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-38" target="yaBAwWdUjn6GlstP9hA2-44" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="5312" y="2880" />
              <mxPoint x="5312" y="2990" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-46" value="定时任务 tcp_connect_rto" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-45" vertex="1" connectable="0">
          <mxGeometry x="0.5123" y="-1" relative="1" as="geometry">
            <mxPoint x="2.5" y="-1" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-38" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; struct sock *sk = &amp;amp;tsk-&amp;gt;sk;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tcp_release_rto_timer(tsk);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; 加定时器任务&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (sk-&amp;gt;state == &lt;span style=&quot;background-color: rgb(255 , 255 , 102)&quot;&gt;TCP_SYN_SENT&lt;/span&gt;) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tsk-&amp;gt;retransmit = timer_add(TCP_SYN_BACKOFF &amp;lt;&amp;lt; tsk-&amp;gt;backoff, &amp;amp;tcp_connect_rto, tsk);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tsk-&amp;gt;retransmit = timer_add(tsk-&amp;gt;rto, &amp;amp;tcp_retransmission_timeout, tsk);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="4711" y="2810" width="521" height="140" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-41" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; if (tsk) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; timer_release(tsk-&amp;gt;retransmit);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tsk-&amp;gt;retransmit = NULL;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="5392" y="2690" width="210" height="70" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-48" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-44" target="yaBAwWdUjn6GlstP9hA2-47" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-49" value="tcp_done" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-48" vertex="1" connectable="0">
          <mxGeometry x="0.6842" y="-2" relative="1" as="geometry">
            <mxPoint x="-34.17" y="-2" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-52" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="yaBAwWdUjn6GlstP9hA2-44" target="yaBAwWdUjn6GlstP9hA2-50" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="5742" y="3230" />
              <mxPoint x="4972" y="3230" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-53" value="tcp_transmit_skb" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-52" vertex="1" connectable="0">
          <mxGeometry x="-0.1269" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-44" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; struct tcp_sock *tsk = (struct tcp_sock *) arg;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct tcb *tcb = &amp;amp;tsk-&amp;gt;tcb;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct sock *sk = &amp;amp;tsk-&amp;gt;sk;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; socket_wr_acquire(sk-&amp;gt;sock);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tcp_release_rto_timer(tsk);取消掉定时任务&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (sk-&amp;gt;state == TCP_SYN_SENT) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (tsk-&amp;gt;backoff &amp;gt; TCP_CONN_RETRIES) {//超过3次&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tsk-&amp;gt;sk.err = -ETIMEDOUT;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; sk-&amp;gt;poll_events |= (POLLOUT | POLLERR | POLLHUP);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tcp_done(sk);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; struct sk_buff *skb = write_queue_head(sk);//sk-&amp;gt;write_queue的第一个节点&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (skb) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; skb_reset_header(skb);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;font color=&quot;#ff3333&quot;&gt;tcp_transmit_skb&lt;/font&gt;(sk, skb, tcb-&amp;gt;snd_una);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tsk-&amp;gt;backoff++; 增加重试计数&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tcp_rearm_rto_timer(tsk); 重启定时任务&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; print_err(&quot;TCP connect RTO triggered even when not in SYNSENT\n&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; socket_release(sk-&amp;gt;sock);销毁struct sock&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="5512" y="2780" width="460" height="420" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-47" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; tcp_set_state(sk, TCP_CLOSING);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tcp_free(sk);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return socket_delete(sk-&amp;gt;sock);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="6062" y="2955" width="220" height="70" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-56" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fillColor=#6a00ff;strokeColor=#3700CC;" parent="1" source="yaBAwWdUjn6GlstP9hA2-50" target="yaBAwWdUjn6GlstP9hA2-55" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-58" value="ip_output" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-56" vertex="1" connectable="0">
          <mxGeometry x="0.1339" y="-5" relative="1" as="geometry">
            <mxPoint x="-77.65" y="-5" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-50" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; struct tcp_sock *tsk = tcp_sk(sk);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct tcb *tcb = &amp;amp;tsk-&amp;gt;tcb;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct tcphdr *thdr = tcp_hdr(skb);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; /* No options were previously set */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (thdr-&amp;gt;hl == 0) thdr-&amp;gt;hl = TCP_DOFFSET;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb_push(skb, thdr-&amp;gt;hl * 4);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;sport = sk-&amp;gt;sport;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;dport = sk-&amp;gt;dport;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;seq = seq;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;ack_seq = tcb-&amp;gt;rcv_nxt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;rsvd = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;win = tcb-&amp;gt;rcv_wnd;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;csum = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;urp = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (thdr-&amp;gt;hl &amp;gt; 5) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; tcp_write_options(tsk, thdr);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; tcp_out_dbg(thdr, sk, skb);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;sport = htons(thdr-&amp;gt;sport);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;dport = htons(thdr-&amp;gt;dport);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;seq = htonl(thdr-&amp;gt;seq);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;ack_seq = htonl(thdr-&amp;gt;ack_seq);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;win = htons(thdr-&amp;gt;win);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;csum = htons(thdr-&amp;gt;csum);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;urp = htons(thdr-&amp;gt;urp);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; thdr-&amp;gt;csum = tcp_v4_checksum(skb, htonl(sk-&amp;gt;saddr), htonl(sk-&amp;gt;daddr));&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return ip_output(sk, skb);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="4711" y="3260" width="521" height="510" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-60" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="yaBAwWdUjn6GlstP9hA2-55" target="yaBAwWdUjn6GlstP9hA2-59" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-62" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;dst_neigh_output&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-60" vertex="1" connectable="0">
          <mxGeometry x="0.3412" y="-3" relative="1" as="geometry">
            <mxPoint x="-25" y="-3" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-55" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; struct rtentry *rt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct iphdr *ihdr = ip_hdr(skb);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; rt = route_lookup(sk-&amp;gt;daddr);找到路由设备&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!rt) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // TODO: dest_unreachable&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; print_err(&quot;IP output route lookup fail\n&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return -1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb-&amp;gt;dev = rt-&amp;gt;dev;&lt;font color=&quot;#ff00ff&quot;&gt;找到某个网段的网卡设备 struct netdev&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb-&amp;gt;rt = rt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb_push(skb, IP_HDR_LEN);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;version = IPV4;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;ihl = 0x05;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;tos = 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;len = skb-&amp;gt;len;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;id = ihdr-&amp;gt;id;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;frag_offset = 0x4000;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;ttl = 64;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;proto = skb-&amp;gt;protocol;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;saddr = skb-&amp;gt;dev-&amp;gt;addr;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;daddr = sk-&amp;gt;daddr;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;csum = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ip_dbg(&quot;out&quot;, ihdr);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;len = htons(ihdr-&amp;gt;len);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;id = htons(ihdr-&amp;gt;id);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;daddr = htonl(ihdr-&amp;gt;daddr);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;saddr = htonl(ihdr-&amp;gt;saddr);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;csum = htons(ihdr-&amp;gt;csum);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ihdr-&amp;gt;frag_offset = htons(ihdr-&amp;gt;frag_offset);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ip_send_check(ihdr);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return dst_neigh_output(skb);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="6840" y="3220" width="340" height="590" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-64" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;" parent="1" source="yaBAwWdUjn6GlstP9hA2-59" target="yaBAwWdUjn6GlstP9hA2-63" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-65" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;netdev_transmit&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-64" vertex="1" connectable="0">
          <mxGeometry x="-0.2" y="-2" relative="1" as="geometry">
            <mxPoint x="16.17" y="-2.08" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-67" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-59" target="yaBAwWdUjn6GlstP9hA2-66" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-68" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;arp_get_hwaddr&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-67" vertex="1" connectable="0">
          <mxGeometry x="0.2742" y="1" relative="1" as="geometry">
            <mxPoint as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-70" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-59" target="yaBAwWdUjn6GlstP9hA2-69" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-71" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;arp_request&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];" parent="yaBAwWdUjn6GlstP9hA2-70" vertex="1" connectable="0">
          <mxGeometry x="-0.2617" y="3" relative="1" as="geometry">
            <mxPoint x="-3" y="12.25" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-59" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; struct iphdr *iphdr = ip_hdr(skb);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct netdev *netdev = skb-&amp;gt;dev;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct rtentry *rt = skb-&amp;gt;rt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; uint32_t daddr = ntohl(iphdr-&amp;gt;daddr);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; uint32_t saddr = ntohl(iphdr-&amp;gt;saddr);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; uint8_t *dmac;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (rt-&amp;gt;flags &amp;amp; RT_GATEWAY) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; daddr = rt-&amp;gt;gateway;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; dmac = arp_get_hwaddr(daddr); 通过IP地址，找到MAC地址&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (dmac) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return netdev_transmit(skb, dmac, ETH_P_IP);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; arp_request(saddr, daddr, netdev);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; /* Inform upper layer that traffic was not sent, retry later */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return -1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="7333" y="3346.25" width="350" height="337.5" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-63" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; struct netdev *dev;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct eth_hdr *hdr;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int ret = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; dev = skb-&amp;gt;dev;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb_push(skb, ETH_HDR_LEN);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; hdr = (struct eth_hdr *)skb-&amp;gt;data;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(hdr-&amp;gt;dmac, dst_hw, dev-&amp;gt;addr_len);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(hdr-&amp;gt;smac, dev-&amp;gt;hwaddr, dev-&amp;gt;addr_len);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; hdr-&amp;gt;ethertype = htons(ethertype);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; eth_dbg(&quot;out&quot;, hdr);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ret = tun_write((char *)skb-&amp;gt;data, skb-&amp;gt;len);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="7860" y="3388" width="300" height="254" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-66" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; struct list_head *item;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct arp_cache_entry *entry;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; list_for_each(item, &amp;amp;arp_cache) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entry = list_entry(item, struct arp_cache_entry, list);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (entry-&amp;gt;state == ARP_RESOLVED &amp;amp;&amp;amp;&amp;nbsp;&lt;span&gt;entry-&amp;gt;sip == sip) {&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; arpcache_dbg(&quot;entry&quot;, entry);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; uint8_t *copy = entry-&amp;gt;smac;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return copy;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="7320.25" y="3025" width="375.5" height="200" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-72" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0.5;entryY=1;entryDx=0;entryDy=0;" parent="1" source="yaBAwWdUjn6GlstP9hA2-69" target="yaBAwWdUjn6GlstP9hA2-63" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="yaBAwWdUjn6GlstP9hA2-69" value="&lt;div&gt;&amp;nbsp; &amp;nbsp; struct sk_buff *skb;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct arp_hdr *arp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct arp_ipv4 *payload;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int rc = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb = arp_alloc_skb();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!skb) return -1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb-&amp;gt;dev = netdev;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; payload = (struct arp_ipv4 *) skb_push(skb, ARP_DATA_LEN);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(payload-&amp;gt;smac, netdev-&amp;gt;hwaddr, netdev-&amp;gt;addr_len);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; payload-&amp;gt;sip = sip;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(payload-&amp;gt;dmac, broadcast_hw, netdev-&amp;gt;addr_len);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; payload-&amp;gt;dip = dip;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arp = (struct arp_hdr *) skb_push(skb, ARP_HDR_LEN);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arp_dbg(&quot;req&quot;, arp);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arp-&amp;gt;opcode = htons(ARP_REQUEST);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arp-&amp;gt;hwtype = htons(ARP_ETHERNET);&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arp-&amp;gt;protype = htons(ETH_P_IP);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arp-&amp;gt;hwsize = netdev-&amp;gt;addr_len;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arp-&amp;gt;prosize = 4;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata_dbg(&quot;req&quot;, payload);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; payload-&amp;gt;sip = htonl(payload-&amp;gt;sip);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; payload-&amp;gt;dip = htonl(payload-&amp;gt;dip);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; rc = netdev_transmit(skb, broadcast_hw, ETH_P_ARP);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; free_skb(skb);&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="7320.25" y="3970" width="377" height="510" as="geometry" />
        </mxCell>
        <mxCell id="SpSznTODdMoxs4yrN4X4-1" value="&lt;div&gt;enum tcp_states {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TCP_LISTEN,&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;/* represents waiting for a connection request from any remote TCP and port. */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TCP_SYN_SENT,&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;/* represents waiting for a matching connection request after having sent a connection request. */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TCP_SYN_RECEIVED,&lt;span&gt;&amp;nbsp;&amp;nbsp;&lt;/span&gt;/* represents waiting for a confirming connection request acknowledgment after having both received and sent a connection request. */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TCP_ESTABLISHED,&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;/* represents an open connection, data received can be delivered to the user.&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; The normal state for the data transfer phase of the connection. 以上是三次握手过程 */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; TCP_FIN_WAIT_1,&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;/* represents waiting for a connection termination request from the remote TCP,&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; or an acknowledgment of the connection termination request previously sent. */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TCP_FIN_WAIT_2,&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;/* represents waiting for a connection termination request from the remote TCP. */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TCP_CLOSE,&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;/* represents no connection state at all. */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TCP_CLOSE_WAIT,&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;/* represents waiting for a connection termination request from the local user. */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TCP_CLOSING,&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;/* represents waiting for a connection termination request acknowledgment from the remote TCP. */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TCP_LAST_ACK,&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span&gt;  &lt;/span&gt;/* represents waiting for an acknowledgment of the connection termination request previously sent to the remote TCP&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; (which includes an acknowledgment of its connection termination request). */&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; TCP_TIME_WAIT,&lt;span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;/* represents waiting for enough time to pass to be sure the remote TCP received the acknowledgment of its connection termination request. */&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="3020" y="1940" width="910" height="290" as="geometry" />
        </mxCell>
        <mxCell id="dzpFjZSb-bzoJs8NH7mf-1" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="dzpFjZSb-bzoJs8NH7mf-3" target="dzpFjZSb-bzoJs8NH7mf-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="dzpFjZSb-bzoJs8NH7mf-2" value="&lt;span style=&quot;color: rgb(0 , 0 , 0) ; font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;transmit_lvlip&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=20;fontColor=#FF00FF;" parent="dzpFjZSb-bzoJs8NH7mf-1" vertex="1" connectable="0">
          <mxGeometry x="0.2879" y="2" relative="1" as="geometry">
            <mxPoint x="-20.83" y="-2.84" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dzpFjZSb-bzoJs8NH7mf-3" value="&lt;div&gt;int connect(int sockfd, const struct sockaddr *addr, socklen_t addrlen)&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct lvlip_sock *sock = lvlip_get_sock(sockfd);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (sock == NULL) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 如果没有查找到我们协议栈的socket，&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 直接调用libc里的connect函数&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return _connect(sockfd, addr, addrlen);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int msglen = sizeof(struct ipc_msg) + sizeof(struct ipc_connect);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int pid = getpid();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct ipc_msg *msg = alloca(msglen);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; msg-&amp;gt;type = &lt;font color=&quot;#009900&quot;&gt;IPC_CONNECT&lt;/font&gt;;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; msg-&amp;gt;pid = pid;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct ipc_connect payload = {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .sockfd = sockfd,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addr = *addr,&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .addrlen = addrlen&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; };&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(msg-&amp;gt;data, &amp;amp;payload, sizeof(struct ipc_connect));&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return transmit_lvlip(sock-&amp;gt;lvlfd, msg, msglen);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;strokeColor=#FF00FF;" parent="1" vertex="1">
          <mxGeometry x="980" y="2756.25" width="400" height="422.5" as="geometry" />
        </mxCell>
        <mxCell id="dzpFjZSb-bzoJs8NH7mf-4" value="&lt;div&gt;_write(lvlfd, (char *)msg, msglen)&lt;/div&gt;&lt;div&gt;&lt;span&gt;_read(lvlfd, buf, RCBUF_LEN)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;// 发送的格式、回应的格式，都是自己定义的，哈哈哈！&lt;/div&gt;&lt;div&gt;&lt;span&gt; &lt;/span&gt;// ipc_msg + ipc_err&lt;/div&gt;&lt;div&gt;struct ipc_msg *response = (struct ipc_msg *) buf;&lt;/div&gt;&lt;div&gt;&lt;span&gt;struct ipc_err *err = (struct ipc_err *) response-&amp;gt;data;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;font color=&quot;#ff00ff&quot;&gt;返回的是connect的返回值！&lt;/font&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;return err-&amp;gt;rc;&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;strokeColor=#FF00FF;" parent="1" vertex="1">
          <mxGeometry x="1490" y="2880" width="350" height="175" as="geometry" />
        </mxCell>
        <mxCell id="dzpFjZSb-bzoJs8NH7mf-5" value="&lt;span style=&quot;text-align: left; font-size: 20px;&quot;&gt;liblevelip.so&lt;/span&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=20;fontColor=#FF00FF;" parent="1" vertex="1">
          <mxGeometry x="1407" y="2762.66" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-4" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=20;" parent="1" source="OfL4en9KDuTbf07v0vyc-1" target="OfL4en9KDuTbf07v0vyc-3" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-5" value="&lt;span style=&quot;font-size: 12px ; text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;netdev_receive(skb);&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=20;" parent="OfL4en9KDuTbf07v0vyc-4" vertex="1" connectable="0">
          <mxGeometry x="0.284" relative="1" as="geometry">
            <mxPoint x="-31.67" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-1" value="&lt;div&gt;void *netdev_rx_loop()&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; while (running) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; struct sk_buff *skb = alloc_skb(BUFLEN);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (tun_read((char *)skb-&amp;gt;data, BUFLEN) &amp;lt; 0) {&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; perror(&quot;ERR: Read from tun_fd&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; free_skb(skb);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return NULL;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; netdev_receive(skb);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return NULL;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;" parent="1" vertex="1">
          <mxGeometry x="100" y="139" width="350" height="241" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-2" value="接收线程" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=20;" parent="1" vertex="1">
          <mxGeometry x="200" y="55" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="OfL4en9KDuTbf07v0vyc-3" target="OfL4en9KDuTbf07v0vyc-6" edge="1">
          <mxGeometry relative="1" as="geometry">
            <Array as="points">
              <mxPoint x="1080" y="259" />
              <mxPoint x="1080" y="-530" />
              <mxPoint x="1360" y="-530" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-8" value="&lt;span style=&quot;text-align: left ; background-color: rgb(248 , 249 , 250)&quot;&gt;arp_rcv(skb);&lt;/span&gt;" style="edgeLabel;html=1;align=center;verticalAlign=middle;resizable=0;points=[];fontSize=12;" parent="OfL4en9KDuTbf07v0vyc-7" vertex="1" connectable="0">
          <mxGeometry x="0.5487" y="-4" relative="1" as="geometry">
            <mxPoint x="88.67" y="-3.5" as="offset" />
          </mxGeometry>
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-3" value="&lt;div style=&quot;font-size: 12px;&quot;&gt;static int netdev_receive(struct sk_buff *skb)&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;{&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; struct eth_hdr *hdr = eth_hdr(skb);&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;br style=&quot;font-size: 12px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; eth_dbg(&quot;in&quot;, hdr);&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;br style=&quot;font-size: 12px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; switch (hdr-&amp;gt;ethertype) {&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case ETH_P_ARP:&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; arp_rcv(skb);&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case ETH_P_IP:&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ip_rcv(skb);&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; case ETH_P_IPV6:&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; default:&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printf(&quot;Unsupported ethertype %x\n&quot;, hdr-&amp;gt;ethertype);&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; free_skb(skb);&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&lt;br style=&quot;font-size: 12px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;&amp;nbsp; &amp;nbsp; return 0;&lt;/div&gt;&lt;div style=&quot;font-size: 12px;&quot;&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=12;align=left;" parent="1" vertex="1">
          <mxGeometry x="639" y="99" width="351" height="321" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-12" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.25;entryDx=0;entryDy=0;fontSize=12;" parent="1" source="OfL4en9KDuTbf07v0vyc-6" target="OfL4en9KDuTbf07v0vyc-9" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-13" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;" parent="1" source="OfL4en9KDuTbf07v0vyc-6" target="OfL4en9KDuTbf07v0vyc-10" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-14" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;" parent="1" source="OfL4en9KDuTbf07v0vyc-6" target="OfL4en9KDuTbf07v0vyc-11" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-6" value="&lt;div&gt;void arp_rcv(struct sk_buff *skb)&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct arp_hdr *arphdr;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct arp_ipv4 *arpdata;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct netdev *netdev;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int merge = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; //以太头之后的，就是ARP数据了&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arphdr = arp_hdr(skb);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arphdr-&amp;gt;hwtype = ntohs(arphdr-&amp;gt;hwtype);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arphdr-&amp;gt;protype = ntohs(arphdr-&amp;gt;protype);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arphdr-&amp;gt;opcode = ntohs(arphdr-&amp;gt;opcode);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arp_dbg(&quot;in&quot;, arphdr);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (arphdr-&amp;gt;hwtype != ARP_ETHERNET) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printf(&quot;ARP: Unsupported HW type\n&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; goto drop_pkt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (arphdr-&amp;gt;protype != ARP_IPV4) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printf(&quot;ARP: Unsupported protocol\n&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; goto drop_pkt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata = (struct arp_ipv4 *) arphdr-&amp;gt;data;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata-&amp;gt;sip = ntohl(arpdata-&amp;gt;sip);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata-&amp;gt;dip = ntohl(arpdata-&amp;gt;dip);//接收方IP&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata_dbg(&quot;receive&quot;, arpdata);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; merge = &lt;font color=&quot;#ff0000&quot;&gt;update_arp_translation_table&lt;/font&gt;(arphdr, arpdata);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; //根据接收方IP找到 netdev 设备&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!(netdev = &lt;font color=&quot;#ff00ff&quot;&gt;netdev_get&lt;/font&gt;(arpdata-&amp;gt;dip))) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printf(&quot;ARP was not for us\n&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; goto drop_pkt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (!merge &amp;amp;&amp;amp; &lt;font color=&quot;#ff0000&quot;&gt;insert_arp_translation_table&lt;/font&gt;(arphdr, arpdata) != 0) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; print_err(&quot;ERR: No free space in ARP translation table\n&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; goto drop_pkt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; switch (arphdr-&amp;gt;opcode) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; case ARP_REQUEST:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;b&gt;arp_reply(skb, netdev);&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; default:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printf(&quot;ARP: Opcode not supported\n&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; goto drop_pkt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;drop_pkt:&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; free_skb(skb);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=12;align=left;" parent="1" vertex="1">
          <mxGeometry x="1390" y="-940" width="370" height="821" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-9" value="&lt;div&gt;static int &lt;font color=&quot;#ff0000&quot;&gt;insert_&lt;/font&gt;arp_translation_table(struct arp_hdr *hdr, struct arp_ipv4 *data)&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct arp_cache_entry *entry = arp_entry_alloc(hdr, data);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; pthread_mutex_lock(&amp;amp;lock);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; list_add_tail(&amp;amp;entry-&amp;gt;list, &amp;amp;arp_cache);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; pthread_mutex_unlock(&amp;amp;lock);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return 0;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;static int &lt;font color=&quot;#ff0000&quot;&gt;update_&lt;/font&gt;arp_translation_table(struct arp_hdr *hdr, struct arp_ipv4 *data)&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct list_head *item;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct arp_cache_entry *entry;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; pthread_mutex_lock(&amp;amp;lock);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; list_for_each(item, &amp;amp;arp_cache) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entry = list_entry(item, struct arp_cache_entry, list);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if (entry-&amp;gt;hwtype == hdr-&amp;gt;hwtype &amp;amp;&amp;amp; entry-&amp;gt;sip == data-&amp;gt;sip) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; memcpy(entry-&amp;gt;smac, data-&amp;gt;smac, 6);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; pthread_mutex_unlock(&amp;amp;lock);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return 1;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; pthread_mutex_unlock(&amp;amp;lock);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return 0;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=12;align=left;" parent="1" vertex="1">
          <mxGeometry x="1880" y="-1160" width="440" height="470" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-10" value="&lt;div&gt;&lt;font color=&quot;#ff33ff&quot;&gt;struct netdev* netdev_get(uint32_t sip)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; netdev是本协议栈刚开始时，&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; 初始化的一个虚拟的网卡，IP地址是10.0.0.5&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; if (&lt;b&gt;netdev-&amp;gt;addr&lt;/b&gt; == sip) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return netdev;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; } else {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return NULL;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="whiteSpace=wrap;html=1;fontSize=12;align=left;" parent="1" vertex="1">
          <mxGeometry x="1880" y="-665" width="280" height="160" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-16" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;" parent="1" source="OfL4en9KDuTbf07v0vyc-11" target="OfL4en9KDuTbf07v0vyc-15" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-11" value="&lt;div&gt;void arp_reply(struct sk_buff *skb, struct netdev *netdev)&amp;nbsp;&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct arp_hdr *arphdr;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct arp_ipv4 *arpdata;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; //取出以太头之后的数据，就是ARP数据了&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arphdr = arp_hdr(skb);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; //skb-&amp;gt;data指针，往前加，一下保留3段&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb_reserve(skb, ETH_HDR_LEN + ARP_HDR_LEN + ARP_DATA_LEN);&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; //要修改那一段的内容时，把那一段push出来。&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; //skb-&amp;gt;data指针，往后缩&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb_push(skb, ARP_HDR_LEN + ARP_DATA_LEN);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; //直接在原skb的基础上，修改字段，拼凑出要发出的skb&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata = (struct arp_ipv4 *) arphdr-&amp;gt;data;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(arpdata-&amp;gt;dmac, arpdata-&amp;gt;smac, 6);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata-&amp;gt;dip = arpdata-&amp;gt;sip;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(arpdata-&amp;gt;smac, netdev-&amp;gt;hwaddr, 6);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata-&amp;gt;sip = netdev-&amp;gt;addr;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arphdr-&amp;gt;opcode = ARP_REPLY;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arp_dbg(&quot;reply&quot;, arphdr);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arphdr-&amp;gt;opcode = htons(arphdr-&amp;gt;opcode);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arphdr-&amp;gt;hwtype = htons(arphdr-&amp;gt;hwtype);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arphdr-&amp;gt;protype = htons(arphdr-&amp;gt;protype);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata_dbg(&quot;reply&quot;, arpdata);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata-&amp;gt;sip = htonl(arpdata-&amp;gt;sip);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; arpdata-&amp;gt;dip = htonl(arpdata-&amp;gt;dip);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb-&amp;gt;dev = netdev;//指定发出时，使用的网卡是哪个&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &lt;font color=&quot;#ff00ff&quot;&gt;netdev_transmit(skb, arpdata-&amp;gt;dmac, ETH_P_ARP);&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; free_skb(skb);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=12;align=left;" parent="1" vertex="1">
          <mxGeometry x="1880" y="-480" width="440" height="560" as="geometry" />
        </mxCell>
        <mxCell id="OfL4en9KDuTbf07v0vyc-15" value="&lt;div&gt;&lt;font color=&quot;#ff00ff&quot;&gt;int netdev_transmit(struct sk_buff *skb, uint8_t *dst_hw, uint16_t ethertype)&lt;/font&gt;&lt;/div&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct netdev *dev;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; struct eth_hdr *hdr;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; int ret = 0;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; dev = skb-&amp;gt;dev;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; //skb-&amp;gt;data 指针，往后缩一个以太头的长度&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; skb_push(skb, ETH_HDR_LEN);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; hdr = (struct eth_hdr *)skb-&amp;gt;data;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(hdr-&amp;gt;dmac, dst_hw, dev-&amp;gt;addr_len);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; memcpy(hdr-&amp;gt;smac, dev-&amp;gt;hwaddr, dev-&amp;gt;addr_len);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; hdr-&amp;gt;ethertype = htons(ethertype);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; eth_dbg(&quot;out&quot;, hdr);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; ret = tun_write((char *)skb-&amp;gt;data, skb-&amp;gt;len);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; return ret;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=12;align=left;" parent="1" vertex="1">
          <mxGeometry x="2481" y="-360" width="409" height="320" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
